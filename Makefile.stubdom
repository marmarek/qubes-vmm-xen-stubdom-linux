include Makefile.vars

.PHONY: all install clean

SHELL := bash

STUBDOM_BINDIR=/usr/lib/xen/boot
VMLINUZ=build/linux/arch/x86/boot/bzImage
ROOTFS_IMG=build/rootfs/stubdom-linux-rootfs
SEABIOS=build/qemu/roms/seabios/builds/seabios-256k/bios.bin

# Stubdom disk content
STUBDOM_DISK_FILE= \
  build/busybox/busybox \
  build/qemu/i386-softmmu/qemu-system-i386 \
  rootfs/init \
  rootfs/qemu-ifup \
  rootfs/qemu-ifdown \
  helpers/add-fd \
  helpers/vchan-socket-proxy

Q=scripts/quilt-wrapper

all: $(VMLINUZ) $(ROOTFS_IMG)

build/busybox/.extracted: dl/busybox-$(BUSYBOX_VERSION).tar.bz2
	rm -rf build/busybox
	mkdir -p build/busybox
	tar -C build/busybox --strip-components=1 -xf $<
	touch $@

build/busybox/config.status: build/busybox/.extracted
	cp busybox/busybox.config build/busybox/.config
	yes "" | $(MAKE) -C build/busybox oldconfig
	touch $@

build/busybox/busybox: build/busybox/config.status
	$(MAKE) -C build/busybox
	strip --strip-unneeded build/busybox/busybox_unstripped
	mv build/busybox/busybox_unstripped build/busybox/busybox

QEMU_PATCHES := $(shell $Q -l qemu)

build/qemu/.extracted: dl/qemu-$(QEMU_VERSION).tar.xz
	rm -rf build/qemu
	mkdir -p build/qemu
	tar -C build/qemu --strip-components=1 -xf $<
	rm build/qemu/pc-bios/*.{rom,bin,dtb} # remove prebuild binaries
	touch $@

build/qemu/.patched: build/qemu/.extracted qemu/patches/series $(QEMU_PATCHES)
	$Q -C build/qemu -. pop -a
	rm -rf build/qemu/.patches
	cp -aL qemu/patches build/qemu/.patches
	$Q -C build/qemu -. push -a
	touch $@

build/qemu/config.status: build/qemu/.patched
	cd build/qemu && ./configure \
		--target-list=i386-softmmu \
		--enable-xen \
		--enable-xen-pci-passthrough \
		--disable-werror \
		--disable-sdl \
		--disable-kvm \
		--disable-gtk \
		--disable-fdt \
		--disable-bluez \
		--disable-libusb \
		--disable-slirp \
		--enable-pie \
		--disable-docs \
		--disable-vhost-net \
		--disable-spice \
		--disable-guest-agent \
		--audio-drv-list= \
		--disable-smartcard \
		--disable-vnc \
		--disable-spice \
		--enable-trace-backends=log \
		--disable-gnutls \
		--disable-nettle \
		--disable-gcrypt \
		--disable-vte \
		--disable-curses \
		--disable-cocoa \
		--disable-virtfs \
		--disable-brlapi \
		--disable-curl \
		--disable-rdma \
		--disable-vde \
		--disable-netmap \
		--disable-linux-aio \
		--disable-cap-ng \
		--disable-attr \
		--disable-rbd \
		--disable-libiscsi \
		--disable-libnfs \
		--disable-usb-redir \
		--disable-lzo \
		--disable-snappy \
		--disable-bzip2 \
		--enable-seccomp \
		--disable-coroutine-pool \
		--disable-glusterfs \
		--disable-tpm \
		--disable-libssh2 \
		--disable-numa \
		--disable-tcmalloc \
		--disable-jemalloc \
		--disable-vhost-scsi \
		--disable-qom-cast-debug \
		--disable-virglrenderer \
		--disable-tools \
		--disable-replication \
		--disable-vhost-vsock \
		--disable-hax \
		--disable-vhost-vsock \
		--disable-opengl \
		--disable-virglrenderer \
		--disable-xfsctl \
		--disable-blobs \
		--disable-tcg \
		--disable-crypto-afalg \
		--disable-live-block-migration \
		--disable-vxhs \
		--disable-vhost-user \
		--disable-vhost-crypto \
		--cxx=/non-existent \
		--extra-cflags="-DXEN_PT_LOGGING_ENABLED=1" \
		--extra-ldflags="-Wl,-z,nodlopen -Wl,-z,nodump -Wl,-z,noexecstack" \
		--prefix=

build/qemu/i386-softmmu/qemu-system-i386: build/qemu/.patched build/qemu/config.status
	$(MAKE) -C build/qemu/roms seavgabios-{cirrus,stdvga}
	$(MAKE) -C build/qemu/pc-bios/optionrom linuxboot.bin
	$(MAKE) -C build/qemu

$(SEABIOS): build/qemu/.patched
	$(MAKE) -C build/qemu/roms build-seabios-config-seabios-256k

LINUX_PATCHES := $(shell $Q -l linux)

build/linux/.extracted: dl/linux-$(LINUX_VERSION).tar.xz
	rm -rf build/linux
	mkdir -p build/linux
	tar -C build/linux --strip-components=1 -xf $<
	touch $@

build/linux/.patched: build/linux/.extracted linux/patches/series $(LINUX_PATCHES)
	$Q -C build/linux -. pop -a
	rm -rf build/linux/.patches
	cp -a linux/patches build/linux/.patches
	$Q -C build/linux -. push -a
	touch $@

build/linux/.config: $(sort $(wildcard linux/config/[0-9][0-9]-*)) build/linux/.extracted
	cd build/linux; env -u MAKEFLAGS ./scripts/kconfig/merge_config.sh -n /dev/null ../../linux/config/[0-9][0-9]-*

$(VMLINUZ): build/linux/.patched build/linux/.config
	$(MAKE) -C build/linux

helpers/vchan-socket-proxy helpers/add-fd: helpers/vchan-socket-proxy.c helpers/add-fd.c
	$(MAKE) -C helpers

DRACUT_INSTALL=/usr/lib/dracut/dracut-install

rootfs/gen: $(DRACUT_INSTALL)

export DRACUT_INSTALL
$(ROOTFS_IMG): rootfs/gen $(STUBDOM_DISK_FILE)
	env -u MAKELEVEL -u MAKEFLAGS -u MFLAGS ./$<

install: $(VMLINUZ) $(ROOTFS_IMG) $(SEABIOS)
	install -D -m 444 $(VMLINUZ) $(DESTDIR)$(STUBDOM_BINDIR)/stubdom-linux-kernel
	install -m 444 $(ROOTFS_IMG) $(DESTDIR)$(STUBDOM_BINDIR)/
	install -m 444 $(SEABIOS) $(DESTDIR)$(STUBDOM_BINDIR)/seabios-256k.bin

clean:
	rm -rf build
